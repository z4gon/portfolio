{"pageProps":{"project":{"id":"cg-surface-shaders-unity","aliases":[],"date":"2022-10","thumbnailUrl":"/videos/thumbnails/cg-surface-shaders-unity.mp4","metaImageUrl":"/images/thumbnails/cg-surface-shaders-unity.gif","imagesUrls":["/images/projects/cg-surface-shaders-unity/11.jpg"],"videosUrls":["/videos/projects/cg-surface-shaders-unity/9.mp4","/videos/projects/cg-surface-shaders-unity/8a.mp4","/videos/projects/cg-surface-shaders-unity/8b.mp4","/videos/projects/cg-surface-shaders-unity/5.mp4","/videos/projects/cg-surface-shaders-unity/4.mp4","/videos/projects/cg-surface-shaders-unity/3.mp4","/videos/projects/cg-surface-shaders-unity/7.mp4","/videos/projects/cg-surface-shaders-unity/6.mp4","/videos/projects/cg-surface-shaders-unity/2.mp4","/videos/projects/cg-surface-shaders-unity/1.mp4","/videos/projects/cg-surface-shaders-unity/10.mp4"],"youtubeVideoIds":["QF2svyMgkRQ"],"primaryImageUrl":null,"primaryVideoUrl":null,"title":"Standard Surface Shaders","subtitle":"Written in the Cg programming language for Unity Built-In RP","description":[],"implementationDetails":["Lambert Lighting, Blinn-Phong Lighting and Custom Lighting models.","Standard Surface Shaders in Unity using the #pragma directive to define the surface function and the lighting model.","Setting the Albedo property from a texture.","Normals implemented using a Normal Map or \"Bump Map\".","Fresnel shader implemented doing the dot scalar multiplication between the Normal and the IN.viewDir.","Environment Mapping using a SkyBox or Cube Map, then using the Unity provided worldRefl vector to derive the texel using texCUBE.","Combine Normal Maps and Environment Mapping, using the Unity provided INTERNAL_DATA macro and the WorldReflectionVector()","Using the Binn-Phong lighting model in a Standard Surface Shader.","Implementing a Custom Lambert Lighting model.","Toon Shading implemented with a ramped Lambert lighting model and an Outline shader implemented in a second Pass.","Utilizing the Standard, physically correct lighting model.","Writing a custom unlit shader for manual implementation of Lambert Lighting, Ambient Illumination and Shadow Casting/Receiving."],"tags":["Cg","Built-in RP","ShaderLab","Unity","Surface Shader","Lighting"],"gitHubUrl":"https://github.com/z4gon/cg-surface-shaders-unity","links":[],"appleAppStoreUrl":null,"googlePlayStoreUrl":null,"technology":"UnityEngine"}},"__N_SSG":true}