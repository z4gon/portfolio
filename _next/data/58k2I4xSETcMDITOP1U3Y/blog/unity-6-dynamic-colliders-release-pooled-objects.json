{"pageProps":{"post":{"slug":"unity-6-dynamic-colliders-release-pooled-objects","date":"2023-06-03T01:00:00.000Z","author":{"name":"Gonzalo Cumini","pictureUrl":"/images/avatars/z4gon.jpg"},"title":"Dynamic Colliders, Releasing Pooled Objects (Unity)","excerpt":"Dynamically resizing box collliders to enclose the scene, so when pooled objects reach the limits can be released.","heroImageUrl":"/resources/blog/unity-6-dynamic-colliders-release-pooled-objects/2.jpg","heroImageSourceUrl":"","heroVideoUrl":"/resources/blog/unity-6-dynamic-colliders-release-pooled-objects/1.mp4","markdownContent":"\n## References\n\n- [Introduction to collision](https://docs.unity3d.com/Manual/CollidersOverview.html)\n\n## Table of Content\n\n- [References](#references)\n- [Table of Content](#table-of-content)\n- [Dynamically Resize Colliders](#dynamically-resize-colliders)\n- [Release Pooled Objects](#release-pooled-objects)\n\n---\n\n## Dynamically Resize Colliders\n\n- After initializing the boundaries of the scene, position and resize the box colliders.\n- Enclose the play area with walls, these `BoxColliders` will belong to the `Projectiles Limit` physics layer.\n- Using properties like `padding` and `wall height`, we can control the shape of the enclosing.\n\n```cs\npublic BoxCollider top;\npublic BoxCollider bottom;\npublic BoxCollider left;\npublic BoxCollider right;\npublic float padding = 3.0f;\npublic float wallHeight = 5.0f;\npublic float wallThickness = 1.0f;\n```\n\n```cs\npublic void Initialize(Boundaries boundaries)\n{\n    var bottomLeft = boundaries.bottomLeft;\n    var topRight = boundaries.topRight;\n\n    // position\n    var centerX = 0;\n    var avgZ = (topRight.position.z + bottomLeft.position.z) / 2;\n\n    var topZ = topRight.position.z + padding;\n    var bottomZ = bottomLeft.position.z - padding;\n\n    var leftX = -topRight.position.x - padding;\n    var rightX = topRight.position.x + padding;\n\n    top.transform.position = new Vector3(centerX, 0, topZ);\n    bottom.transform.position = new Vector3(centerX, 0, bottomZ);\n    left.transform.position = new Vector3(leftX, 0, avgZ);\n    right.transform.position = new Vector3(rightX, 0, avgZ);\n\n    // size\n    var deltaX = (2 * topRight.position.x) + (2 * padding);\n    var deltaZ = topRight.position.z - bottomLeft.position.z + (2 * padding);\n\n    top.size = new Vector3(deltaX, wallHeight, wallThickness);\n    bottom.size = new Vector3(deltaX, wallHeight, wallThickness);\n    left.size = new Vector3(wallThickness, wallHeight, deltaZ);\n    right.size = new Vector3(wallThickness, wallHeight, deltaZ);\n}\n```\n\n![Picture](/resources/blog/unity-6-dynamic-colliders-release-pooled-objects/2.jpg)\n\n---\n\n## Release Pooled Objects\n\n- Make `Bullets` belong to the `Player Projectiles` physics layer.\n- In the phyiscs collisions matrix, make sure to enable the interaction between `Player Projectiles` and `Projectiles Limit`.\n- Define the `OnTriggerEnter()` message in the projectiles, and make them signal their `Gun` to release the pooled object.\n\n```cs\npublic class Bullet : MonoBehaviour\n{\n    public Gun gun; // this is set by the gun, when shooting\n\n    private void OnTriggerEnter(Collider other)\n    {\n        gun.ReclaimBullet(this);\n    }\n}\n```\n\n```cs\npublic class Gun : MonoBehaviour\n{\n    public void ReclaimBullet(Bullet bullet)\n    {\n        bulletsPool.Release(bullet);\n    }\n}\n```\n\n![Picture](/resources/blog/unity-6-dynamic-colliders-release-pooled-objects/3.jpg)\n![Picture](/resources/blog/unity-6-dynamic-colliders-release-pooled-objects/1.jpg)\n"}},"__N_SSG":true}