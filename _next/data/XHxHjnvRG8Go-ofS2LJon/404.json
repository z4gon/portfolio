{"pageProps":{"projects":[{"id":"cg-ball-of-lava-shader-unity","aliases":["ball-of-lava-shader-unity"],"date":"2022-10","thumbnailUrl":"/images/portfolio/cg-ball-of-lava-shader-unity/thumbnail.gif","metaImageUrl":"/images/portfolio/cg-ball-of-lava-shader-unity/thumbnail.gif","imagesUrls":["/images/portfolio/cg-ball-of-lava-shader-unity/7.gif","/images/portfolio/cg-ball-of-lava-shader-unity/6.gif","/images/portfolio/cg-ball-of-lava-shader-unity/5.gif","/images/portfolio/cg-ball-of-lava-shader-unity/4.gif","/images/portfolio/cg-ball-of-lava-shader-unity/3.gif","/images/portfolio/cg-ball-of-lava-shader-unity/2.gif","/images/portfolio/cg-ball-of-lava-shader-unity/1.gif"],"youtubeVideoIds":["r5qDHvfYG9c"],"previewImageUrl":null,"title":"Ball of Lava Shader","subtitle":"Written in Cg with ShaderLab, for the Built-in RP in Unity","description":[],"implementationDetails":["Using the Perlin Noise algorithm to displace vertices in the mesh, during the Vertex Shader Stage.","Using _Time to animate the Perlin Noise, also multiplying by _Displacement and _NoiseVelocity to control how much and how fast the noise is.","Displacing the uv coordinates to simulate rotation, multiplying by _RotationVelocity to control the speed.","Generating a Mesh and making sure the UV map wraps correctly, so the Perlin noise doesn't generate weird shapes in the mesh.","Lerping between colors using steps."],"tags":["Cg","Built-in RP","ShaderLab","Unity","Vertex Shader","Fragment Shader"],"gitHubUrl":"https://github.com/z4gon/cg-ball-of-lava-shader-unity","links":[],"appleAppStoreUrl":null,"googlePlayStoreUrl":null,"cardConfig":{"backgroundSize":"120%","backgroundPosition":"13px 3px","gradientColor":"rgb(109, 23, 0)"}},{"id":"cg-clipping-shader","aliases":[],"date":"2022-10","thumbnailUrl":"/images/portfolio/cg-clipping-shader/thumbnail.gif","metaImageUrl":"/images/portfolio/cg-clipping-shader/thumbnail.gif","imagesUrls":["/images/portfolio/cg-clipping-shader/2.gif","/images/portfolio/cg-clipping-shader/3a.gif","/images/portfolio/cg-clipping-shader/3b.gif"],"youtubeVideoIds":[],"previewImageUrl":null,"title":"Clipping Pixels","subtitle":"Clipping pixels in a Built-in RP shader in Unity, using the Cg programming language","description":[],"implementationDetails":["Clipping using Perlin Noise.","Clipping using cosine function of the Object position of vertices.","Shadow casting and culling manipulation.","Implement a basic Lambert lighting model for better graphic appreciation of the clipping effect."],"tags":["Cg","Built-in RP","ShaderLab","Unity","Vertex Shader","Fragment Shader"],"gitHubUrl":"https://github.com/z4gon/cg-clipping-shader","links":[],"appleAppStoreUrl":null,"googlePlayStoreUrl":null,"cardConfig":{"backgroundSize":"100%","backgroundPosition":"3px -6px","gradientColor":"rgb(65, 107, 145)"}},{"id":"cg-surface-shaders-unity","aliases":[],"date":"2022-10","thumbnailUrl":"/images/portfolio/cg-surface-shaders-unity/thumbnail.gif","metaImageUrl":"/images/portfolio/cg-surface-shaders-unity/thumbnail.gif","imagesUrls":["/images/portfolio/cg-surface-shaders-unity/9.gif","/images/portfolio/cg-surface-shaders-unity/8a.gif","/images/portfolio/cg-surface-shaders-unity/8b.gif","/images/portfolio/cg-surface-shaders-unity/5.gif","/images/portfolio/cg-surface-shaders-unity/4.gif","/images/portfolio/cg-surface-shaders-unity/3.gif","/images/portfolio/cg-surface-shaders-unity/7.gif","/images/portfolio/cg-surface-shaders-unity/6.gif","/images/portfolio/cg-surface-shaders-unity/2.gif","/images/portfolio/cg-surface-shaders-unity/1.gif","/images/portfolio/cg-surface-shaders-unity/10.gif","/images/portfolio/cg-surface-shaders-unity/11.png"],"youtubeVideoIds":["QF2svyMgkRQ"],"previewImageUrl":null,"title":"Standard Surface Shaders","subtitle":"Written in the Cg programming language for Unity Built-In RP","description":[],"implementationDetails":["Lambert Lighting, Blinn-Phong Lighting and Custom Lighting models.","Standard Surface Shaders in Unity using the #pragma directive to define the surface function and the lighting model.","Setting the Albedo property from a texture.","Normals implemented using a Normal Map or \"Bump Map\".","Fresnel shader implemented doing the dot scalar multiplication between the Normal and the IN.viewDir.","Environment Mapping using a SkyBox or Cube Map, then using the Unity provided worldRefl vector to derive the texel using texCUBE.","Combine Normal Maps and Environment Mapping, using the Unity provided INTERNAL_DATA macro and the WorldReflectionVector()","Using the Binn-Phong lighting model in a Standard Surface Shader.","Implementing a Custom Lambert Lighting model.","Toon Shading implemented with a ramped Lambert lighting model and an Outline shader implemented in a second Pass.","Utilizing the Standard, physically correct lighting model.","Writing a custom unlit shader for manual implementation of Lambert Lighting, Ambient Illumination and Shadow Casting/Receiving."],"tags":["Cg","Built-in RP","ShaderLab","Unity","Surface Shader","Lighting"],"gitHubUrl":"https://github.com/z4gon/cg-surface-shaders-unity","links":[],"appleAppStoreUrl":null,"googlePlayStoreUrl":null,"cardConfig":{"backgroundSize":"120%","backgroundPosition":"10px 0px","gradientColor":"rgb(0, 77, 159)"}},{"id":"ground-slash-vfx-unity","aliases":[],"date":"2022-9","thumbnailUrl":"/images/portfolio/ground-slash-vfx-unity/thumbnail.gif","metaImageUrl":"/images/portfolio/ground-slash-vfx-unity/thumbnail.gif","imagesUrls":["/images/portfolio/ground-slash-vfx-unity/thumbnail.gif","/images/portfolio/ground-slash-vfx-unity/13-finished.gif","/images/portfolio/ground-slash-vfx-unity/12-spawn-debris-gravity.gif","/images/portfolio/ground-slash-vfx-unity/11-debris-cell-fracture.gif","/images/portfolio/ground-slash-vfx-unity/10-ground-shooter-script.gif","/images/portfolio/ground-slash-vfx-unity/9-first-person-character-controller.gif","/images/portfolio/ground-slash-vfx-unity/8-decals.gif","/images/portfolio/ground-slash-vfx-unity/7-spawn-trail.gif","/images/portfolio/ground-slash-vfx-unity/6-spawn-over-distance.gif","/images/portfolio/ground-slash-vfx-unity/5-gradient-fade.gif","/images/portfolio/ground-slash-vfx-unity/4-mesh-output.gif","/images/portfolio/ground-slash-vfx-unity/3-slash-model.gif","/images/portfolio/ground-slash-vfx-unity/2-uv-maps.gif","/images/portfolio/ground-slash-vfx-unity/1-model-uv-map.gif"],"youtubeVideoIds":["pybsA5K_S-c"],"previewImageUrl":null,"title":"Ground Slash VFX","subtitle":"With VFX Graph in Unity for URP","description":[],"implementationDetails":["Modelling of the 3D Meshes for the Slash and the Debris.","UV Mapping for the gradient texture of the Slash mesh.","Utilize VFX Graph","Spawning particles over distance, so the VFX leaves a trail of debris.","Decals to leave a burning effect on the ground/geometry.","Programming to snap the VFX to the geometry it goes over, to make it adjust dynamically to it.","Debris with random velocities, gravity and collision with plane.","First Person Character Controller with Input System to simulate the player using the VFX."],"tags":["VFX Graph","URP","Unity","VFX"],"gitHubUrl":"https://github.com/z4gon/ground-slash-vfx-unity","links":[],"appleAppStoreUrl":null,"googlePlayStoreUrl":null,"cardConfig":{"backgroundSize":"100%","backgroundPosition":"4px -14px","gradientColor":"rgb(134, 60, 0)"}}]},"__N_SSG":true}