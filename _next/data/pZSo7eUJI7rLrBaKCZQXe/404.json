{"pageProps":{"projects":[{"id":"mario-kart-item-box-vfx","aliases":[],"date":"2022-10","thumbnailUrl":"/videos/thumbnails/mario-kart-item-box-vfx.mp4","metaImageUrl":"/images/thumbnails/mario-kart-item-box-vfx.gif","imagesUrls":["/images/projects/mario-kart-item-box-vfx/14.jpg","/images/projects/mario-kart-item-box-vfx/15.jpg"],"videosUrls":["/videos/projects/mario-kart-item-box-vfx/13.mp4","/videos/projects/mario-kart-item-box-vfx/12.mp4","/videos/projects/mario-kart-item-box-vfx/11.mp4","/videos/projects/mario-kart-item-box-vfx/10.mp4","/videos/projects/mario-kart-item-box-vfx/9.mp4","/videos/projects/mario-kart-item-box-vfx/8.mp4","/videos/projects/mario-kart-item-box-vfx/7.mp4","/videos/projects/mario-kart-item-box-vfx/6.mp4","/videos/projects/mario-kart-item-box-vfx/5.mp4","/videos/projects/mario-kart-item-box-vfx/4.mp4","/videos/projects/mario-kart-item-box-vfx/3.mp4","/videos/projects/mario-kart-item-box-vfx/2.mp4","/videos/projects/mario-kart-item-box-vfx/1.mp4"],"youtubeVideoIds":["5UPacp2vzOk"],"primaryImageUrl":null,"primaryVideoUrl":null,"title":"Mario Kart Item Box VFX","subtitle":"Implemented both with pure HLSL and Shader Graph, for the Universal RP in Unity","description":[],"implementationDetails":["Rainbow animation effect, using a grayscale texture to distort the UVs for sampling the rainbow colors.","Utilizing the _Time built in variable to make the UVs offset with time.","Using Culling to only render inner sides of the box.","Transparency implemented using RenderType and Queue for transparency, ZWrite off for best practices, and Blend One One.","Obtaining the view direction by substracting the world space position of the vertex to the _WorldSpaceCameraPos.","Basic Fresnel effect achieved by doing the dot product between the view direction and the normal.","Using built in functions and variables from Core.hlsl and Lighting.hlsl","Obtaining the main light direction using the built in GetMainLight()","Computing a basic Blinn Phong lighting model by reflecting the main light dir along the normal, then doing the dot product with the view dir.","Using a Particle System to render the question mark inside the box.","Using an Animation Controller to implement the animations.","Drawing the textures in Affinity Photo for the box."],"tags":["HLSL","URP","Shader Graph","Unity","Vertex Shader","Fragment Shader"],"gitHubUrl":"https://github.com/z4gon/mario-kart-item-box-vfx","links":[],"appleAppStoreUrl":null,"googlePlayStoreUrl":null,"technology":"UnityEngine","category":"Shaders"},{"id":"grass-compute-shader-unity","aliases":[],"date":"2022-10","thumbnailUrl":"/videos/thumbnails/grass-compute-shader-unity.mp4","metaImageUrl":"/images/thumbnails/grass-compute-shader-unity.gif","imagesUrls":["/images/projects/grass-compute-shader-unity/blade.jpg"],"videosUrls":["/videos/projects/grass-compute-shader-unity/11.mp4","/videos/projects/grass-compute-shader-unity/10.mp4","/videos/projects/grass-compute-shader-unity/12b.mp4","/videos/projects/grass-compute-shader-unity/12a.mp4","/videos/projects/grass-compute-shader-unity/9.mp4","/videos/projects/grass-compute-shader-unity/8.mp4","/videos/projects/grass-compute-shader-unity/7b.mp4","/videos/projects/grass-compute-shader-unity/7a.mp4","/videos/projects/grass-compute-shader-unity/6.mp4","/videos/projects/grass-compute-shader-unity/5.mp4","/videos/projects/grass-compute-shader-unity/4.mp4","/videos/projects/grass-compute-shader-unity/3.mp4","/videos/projects/grass-compute-shader-unity/2.mp4","/videos/projects/grass-compute-shader-unity/1.mp4"],"youtubeVideoIds":["dsd_pxnuODE"],"primaryImageUrl":null,"primaryVideoUrl":null,"title":"Grass Compute Shader","subtitle":"Procedural Grass System with Compute Shaders in Unity","description":[],"implementationDetails":["Building a procedural mesh for the Grass Blades, setting vertices, normals and indices.","Placing randomly generated grass blades given an extent and a density.","Raycasting over the terrain to place grass following the uneven surface.","Sharing a compute buffer with the grass blades data between the compute shader and the material.","Using GPU Instancing to render all the grass blades.","Parametrizing the wind direction, wind velocity and wind force.","Parametrizing colors for young and old grass.","Using DrawMeshInstancedIndirect to draw procedurally all the meshes using GPU Instancing.","Perlin noise to calculate the amount of displacement each grass blade needs to have to simulate wind.","Using Translation and Rotation Matrices to position the vertices of the mesh in World Space and Clip Space.","Displacing the vertices of the grass blade proportionally to the UV Y coordinate, to make the base stay still.","Configuring the grass blades to cast shadows and receive shadows."],"tags":["Compute Shader","HLSL","Built-in RP","Cg","Unity"],"gitHubUrl":"https://github.com/z4gon/grass-compute-shader-unity","links":[],"appleAppStoreUrl":null,"googlePlayStoreUrl":null,"technology":"UnityEngine","category":"Compute Shaders"},{"id":"space-portal-shader-unity","aliases":[],"date":"2022-11","thumbnailUrl":"/videos/thumbnails/space-portal-shader-unity.mp4","metaImageUrl":"/images/thumbnails/space-portal-shader-unity.gif","imagesUrls":["/images/projects/space-portal-shader-unity/9.jpg","/images/projects/space-portal-shader-unity/8.jpg","/images/projects/space-portal-shader-unity/7.jpg","/images/projects/space-portal-shader-unity/6.jpg","/images/projects/space-portal-shader-unity/5.jpg","/images/projects/space-portal-shader-unity/4.jpg","/images/projects/space-portal-shader-unity/3.jpg","/images/projects/space-portal-shader-unity/2.jpg","/images/projects/space-portal-shader-unity/1.jpg"],"videosUrls":["/videos/projects/space-portal-shader-unity/10.mp4"],"youtubeVideoIds":["5jiT4pw0tpE"],"primaryImageUrl":null,"primaryVideoUrl":null,"title":"Space Portal Shader","subtitle":"Written in HLSL using Stencil Buffer, in the Built-in RP for Unity","description":[],"implementationDetails":["Modeling the Meshes and UV Mapping in Blender.","Creating the Textures in Affinity, for Masking and doing the Tunnel and Glow VFX.","Using ZWrite Off to make the shaders not write to the Depth Buffer.","Using the Blend command from Shader Lab to implement traditional transparency and additive transparency.","Portal entrance implemented by writing a custom value to the Stencil Buffer to use as a Mask.","Masking the Tunnel, Hemisphere and Particles using the Stencil Test, checking if the Stencil Buffer has the required value written on.","Tunnel implemented animating the texture across the UV.y coordinates using _Time.","Particle System with custom Shader to also do the Stencil Test to Mask the particles inside the portal.","Defining the Vertex Color property so Color Over Time works in the Particle System.","Parametrizing Color, Intensity and Velocity in all the parts of the VFX, for full customization."],"tags":["HLSL","Built-in RP","ShaderLab","Vertex Shader","Fragment Shader","VFX"],"gitHubUrl":"https://github.com/z4gon/space-portal-shader-unity","links":[],"appleAppStoreUrl":null,"googlePlayStoreUrl":null,"technology":"UnityEngine","category":"Shaders"},{"id":"ground-slash-vfx-unity","aliases":[],"date":"2022-9","thumbnailUrl":"/videos/thumbnails/ground-slash-vfx-unity.mp4","metaImageUrl":"/images/thumbnails/ground-slash-vfx-unity.gif","imagesUrls":[],"videosUrls":["/videos/projects/ground-slash-vfx-unity/thumbnail.mp4","/videos/projects/ground-slash-vfx-unity/13-finished.mp4","/videos/projects/ground-slash-vfx-unity/12-spawn-debris-gravity.mp4","/videos/projects/ground-slash-vfx-unity/11-debris-cell-fracture.mp4","/videos/projects/ground-slash-vfx-unity/10-ground-shooter-script.mp4","/videos/projects/ground-slash-vfx-unity/9-first-person-character-controller.mp4","/videos/projects/ground-slash-vfx-unity/8-decals.mp4","/videos/projects/ground-slash-vfx-unity/7-spawn-trail.mp4","/videos/projects/ground-slash-vfx-unity/6-spawn-over-distance.mp4","/videos/projects/ground-slash-vfx-unity/5-gradient-fade.mp4","/videos/projects/ground-slash-vfx-unity/4-mesh-output.mp4","/videos/projects/ground-slash-vfx-unity/3-slash-model.mp4","/videos/projects/ground-slash-vfx-unity/2-uv-maps.mp4","/videos/projects/ground-slash-vfx-unity/1-model-uv-map.mp4"],"youtubeVideoIds":["pybsA5K_S-c"],"primaryImageUrl":null,"primaryVideoUrl":null,"title":"Ground Slash VFX","subtitle":"With VFX Graph in Unity for URP","description":[],"implementationDetails":["Modeling of the 3D Meshes for the Slash and the Debris.","UV Mapping for the gradient texture of the Slash mesh.","Utilize VFX Graph","Spawning particles over distance, so the VFX leaves a trail of debris.","Decals to leave a burning effect on the ground/geometry.","Programming to snap the VFX to the geometry it goes over, to make it adjust dynamically to it.","Debris with random velocities, gravity and collision with plane.","First Person Character Controller with Input System to simulate the player using the VFX."],"tags":["VFX Graph","URP","VFX","Unity"],"gitHubUrl":"https://github.com/z4gon/ground-slash-vfx-unity","links":[],"appleAppStoreUrl":null,"googlePlayStoreUrl":null,"technology":"UnityEngine","category":"Visual Effects"}]},"__N_SSG":true}