{"pageProps":{"post":{"slug":"metal-render-pipeline-part-12-nested-model-matrices","date":"2022-12-30T00:00:00.000Z","author":{"name":"Gonzalo Cumini","pictureUrl":"/images/avatars/z4gon.jpg"},"title":"Metal Render Pipeline Part 12: Nested Model Matrices","excerpt":"Using the parent transform to calculate the child model matrix, taking into account the transformation applied to the parent.","coverImageUrl":"/resources/blog/metal-render-pipeline-part-12-nested-model-matrices/cover.jpg","coverImageSourceUrl":"","coverVideoUrl":"/resources/blog/metal-render-pipeline-part-12-nested-model-matrices/1.mp4","markdownContent":"\n## Source Code\n\n[See Project in GitHub üë©‚Äçüíª](https://github.com/z4gon/metal-render-pipeline)\n\n## References\n\n- [Metal Render Pipeline tutorial series by Rick Twohy](https://www.youtube.com/playlist?list=PLEXt1-oJUa4BVgjZt9tK2MhV_DW7PVDsg)\n\n## Table of Content\n\n- [Implementation](#implementation)\n- [Result](#result)\n\n---\n\n## Implementation\n\nThe **model matrix** is now located in the **transform** level, and every **lateUpdate**, the transform updates its model matrix.\n\nEach **transform** will check if it has a parent, and will multiply the **parent model matrix** by its **model matrix**, making a new model matrix that takes into account the transformations of the parent.\n\n```swift\nclass Transform {\n    ...\n\n    public var modelMatrix: float4x4 = matrix_identity_float4x4\n\n    private var _parent: Transform?\n    public var parent: Transform? {\n        return _parent\n    }\n\n    public func setParent(_ parent: Transform){\n        _parent = parent\n    }\n\n    private func updateModelMatrix() {\n        var result: float4x4 = matrix_identity_float4x4\n\n        result.translate(position: position)\n        result.scale(scale: scale)\n\n        result.rotateX(angle: rotation.x)\n        result.rotateY(angle: rotation.y)\n        result.rotateZ(angle: rotation.z)\n\n        if(_parent != nil){\n            modelMatrix = _parent!.modelMatrix * result\n        } else {\n            modelMatrix = result\n        }\n    }\n\n    // https://docs.unity3d.com/ScriptReference/MonoBehaviour.LateUpdate.html\n    // LateUpdate is called after all Update functions have been called\n    public func lateUpdate(){\n        if let updatableSelf = self as? LateUpdatable {\n            updatableSelf.doLateUpdate()\n        }\n\n        updateModelMatrix()\n\n        for child in _children {\n            child.lateUpdate()\n        }\n    }\n}\n```\n\n---\n\n## Result\n\nNow the cube moves along the parent quad.\n\n![Picture](/resources/blog/metal-render-pipeline-part-12-nested-model-matrices/cover.jpg)\n"}},"__N_SSG":true}