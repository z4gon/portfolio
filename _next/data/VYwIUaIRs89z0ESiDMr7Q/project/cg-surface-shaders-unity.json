{"pageProps":{"project":{"id":"cg-surface-shaders-unity","date":"2022-10","thumbnailUrl":"/images/portfolio/cg-surface-shaders-unity/thumbnail.gif","metaImageUrl":"/images/portfolio/cg-surface-shaders-unity/thumbnail.gif","imagesUrls":["/images/portfolio/cg-surface-shaders-unity/8a.gif","/images/portfolio/cg-surface-shaders-unity/8b.gif","/images/portfolio/cg-surface-shaders-unity/5.gif","/images/portfolio/cg-surface-shaders-unity/4.gif","/images/portfolio/cg-surface-shaders-unity/3.gif","/images/portfolio/cg-surface-shaders-unity/7.gif","/images/portfolio/cg-surface-shaders-unity/6.gif","/images/portfolio/cg-surface-shaders-unity/2.gif","/images/portfolio/cg-surface-shaders-unity/1.gif"],"youtubeVideoIds":["QF2svyMgkRQ"],"title":"Standard Surface Shaders","subtitle":"Written in Cg with ShaderLab, for the Built-in RP in Unity","description":["Lambert Lighting, Blinn-Phong Lighting and Custom Lighting models."],"implementationDetails":["Standard Surface Shaders in Unity using the #pragma directive to define the surface function and the lighting model.","Setting the Albedo property from a texture.","Normals implemented using a Normal Map or \"Bump Map\".","Fresnel shader implemented doing the dot scalar multiplication between the Normal and the IN.viewDir.","Environment Mapping using a SkyBox or Cube Map, then using the Unity provided worldRefl vector to derive the texel using texCUBE.","Combine Normal Maps and Environment Mapping, using the Unity provided INTERNAL_DATA macro and the WorldReflectionVector()","Using the Binn-Phong lighting model in a Standard Surface Shader.","Implementing a Custom Lambert Lighting model.","Toon Shading implemented with a ramped Lambert lighting model and an Outline shader implemented in a second Pass."],"tags":["Cg","Shader Lab","Surface Shader","Lighting","Unity3D"],"gitHubUrl":"https://github.com/z4gon/cg-surface-shaders-unity","links":[],"appleAppStoreUrl":null,"googlePlayStoreUrl":null}},"__N_SSG":true}